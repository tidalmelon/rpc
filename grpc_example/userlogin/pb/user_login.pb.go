// Code generated by protoc-gen-go.
// source: pb/user_login.proto
// DO NOT EDIT!

/*
Package userlogin is a generated protocol buffer package.

It is generated from these files:
	pb/user_login.proto

It has these top-level messages:
	SitesRequest
	SitesResponse
	RequestYYS
	ResponseYYS
	RequestGJJ
	ResponseGJJ
	RequestXmdDzdpSearch
	ResponseXmdDzdpSearch
	RequestXmdDzdpComment
	ResponseXmdDzdpComment
*/
package userlogin

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis/google/api"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CODEYYS int32

const (
	CODEYYS_YYS_S_WAIT              CODEYYS = 0
	CODEYYS_YYS_I_SUCCESS           CODEYYS = 1001
	CODEYYS_YYS_I_INPUT_SMS_AGAIN   CODEYYS = 1002
	CODEYYS_YYS_I_INPUT_SMS         CODEYYS = 1003
	CODEYYS_YYS_I_PWD_ERR           CODEYYS = 1004
	CODEYYS_YYS_I_SMS_ERR           CODEYYS = 1005
	CODEYYS_YYS_I_SMS_INVALID       CODEYYS = 1006
	CODEYYS_YYS_I_IDCARD_INVALID    CODEYYS = 1007
	CODEYYS_YYS_I_PWD_SIM_INIT      CODEYYS = 1008
	CODEYYS_YYS_I_LOGIN_SUCCESS     CODEYYS = 1009
	CODEYYS_YYS_I_PHONE_INVALID     CODEYYS = 1010
	CODEYYS_YYS_I_NAME_INVALID      CODEYYS = 1011
	CODEYYS_YYS_I_PHONE_NOT_SUPPORT CODEYYS = 1012
	CODEYYS_YYS_I_SERVICE_OFF       CODEYYS = 1013
	CODEYYS_YYS_I_CXXD_1001         CODEYYS = 1014
	CODEYYS_YYS_I_CXXD_1001_AGAIN   CODEYYS = 1015
	CODEYYS_YYS_I_INPUT_REPWD       CODEYYS = 1016
	CODEYYS_YYS_I_REPWD_ERR         CODEYYS = 1017
	CODEYYS_YYS_I_FETCH_TIMEOUT     CODEYYS = 1018
	CODEYYS_YYS_I_FETCH_EXCEPTION   CODEYYS = 1999
)

var CODEYYS_name = map[int32]string{
	0:    "YYS_S_WAIT",
	1001: "YYS_I_SUCCESS",
	1002: "YYS_I_INPUT_SMS_AGAIN",
	1003: "YYS_I_INPUT_SMS",
	1004: "YYS_I_PWD_ERR",
	1005: "YYS_I_SMS_ERR",
	1006: "YYS_I_SMS_INVALID",
	1007: "YYS_I_IDCARD_INVALID",
	1008: "YYS_I_PWD_SIM_INIT",
	1009: "YYS_I_LOGIN_SUCCESS",
	1010: "YYS_I_PHONE_INVALID",
	1011: "YYS_I_NAME_INVALID",
	1012: "YYS_I_PHONE_NOT_SUPPORT",
	1013: "YYS_I_SERVICE_OFF",
	1014: "YYS_I_CXXD_1001",
	1015: "YYS_I_CXXD_1001_AGAIN",
	1016: "YYS_I_INPUT_REPWD",
	1017: "YYS_I_REPWD_ERR",
	1018: "YYS_I_FETCH_TIMEOUT",
	1999: "YYS_I_FETCH_EXCEPTION",
}
var CODEYYS_value = map[string]int32{
	"YYS_S_WAIT":              0,
	"YYS_I_SUCCESS":           1001,
	"YYS_I_INPUT_SMS_AGAIN":   1002,
	"YYS_I_INPUT_SMS":         1003,
	"YYS_I_PWD_ERR":           1004,
	"YYS_I_SMS_ERR":           1005,
	"YYS_I_SMS_INVALID":       1006,
	"YYS_I_IDCARD_INVALID":    1007,
	"YYS_I_PWD_SIM_INIT":      1008,
	"YYS_I_LOGIN_SUCCESS":     1009,
	"YYS_I_PHONE_INVALID":     1010,
	"YYS_I_NAME_INVALID":      1011,
	"YYS_I_PHONE_NOT_SUPPORT": 1012,
	"YYS_I_SERVICE_OFF":       1013,
	"YYS_I_CXXD_1001":         1014,
	"YYS_I_CXXD_1001_AGAIN":   1015,
	"YYS_I_INPUT_REPWD":       1016,
	"YYS_I_REPWD_ERR":         1017,
	"YYS_I_FETCH_TIMEOUT":     1018,
	"YYS_I_FETCH_EXCEPTION":   1999,
}

func (x CODEYYS) String() string {
	return proto.EnumName(CODEYYS_name, int32(x))
}
func (CODEYYS) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type LoginStatus int32

const (
	LoginStatus_MEANLESS LoginStatus = 0
	LoginStatus_SUCCESS  LoginStatus = 1
	LoginStatus_PROCESS  LoginStatus = 2
	LoginStatus_FAILED   LoginStatus = 3
)

var LoginStatus_name = map[int32]string{
	0: "MEANLESS",
	1: "SUCCESS",
	2: "PROCESS",
	3: "FAILED",
}
var LoginStatus_value = map[string]int32{
	"MEANLESS": 0,
	"SUCCESS":  1,
	"PROCESS":  2,
	"FAILED":   3,
}

func (x LoginStatus) String() string {
	return proto.EnumName(LoginStatus_name, int32(x))
}
func (LoginStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type CODEGJJ int32

const (
	CODEGJJ_GJJ_S_WAIT            CODEGJJ = 0
	CODEGJJ_GJJ_I_SUCCESS         CODEGJJ = 2101
	CODEGJJ_GJJ_I_LOGIN_SUCCESS   CODEGJJ = 2102
	CODEGJJ_GJJ_I_INPUT_SMS       CODEGJJ = 2103
	CODEGJJ_GJJ_I_PWD_ERR         CODEGJJ = 2104
	CODEGJJ_GJJ_I_SMS_ERR         CODEGJJ = 2105
	CODEGJJ_GJJ_I_FETCH_EXCEPTION CODEGJJ = 2199
)

var CODEGJJ_name = map[int32]string{
	0:    "GJJ_S_WAIT",
	2101: "GJJ_I_SUCCESS",
	2102: "GJJ_I_LOGIN_SUCCESS",
	2103: "GJJ_I_INPUT_SMS",
	2104: "GJJ_I_PWD_ERR",
	2105: "GJJ_I_SMS_ERR",
	2199: "GJJ_I_FETCH_EXCEPTION",
}
var CODEGJJ_value = map[string]int32{
	"GJJ_S_WAIT":            0,
	"GJJ_I_SUCCESS":         2101,
	"GJJ_I_LOGIN_SUCCESS":   2102,
	"GJJ_I_INPUT_SMS":       2103,
	"GJJ_I_PWD_ERR":         2104,
	"GJJ_I_SMS_ERR":         2105,
	"GJJ_I_FETCH_EXCEPTION": 2199,
}

func (x CODEGJJ) String() string {
	return proto.EnumName(CODEGJJ_name, int32(x))
}
func (CODEGJJ) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type CODEXmdDzdpSearch int32

const (
	CODEXmdDzdpSearch_XMD_DZDP_S_S_WAIT            CODEXmdDzdpSearch = 0
	CODEXmdDzdpSearch_XMD_DZDP_S_I_SUCCESS         CODEXmdDzdpSearch = 3001
	CODEXmdDzdpSearch_XMD_DZDP_S_I_CITY_NOT_FOUND  CODEXmdDzdpSearch = 3002
	CODEXmdDzdpSearch_XMD_DZDP_S_I_FETCH_EXCEPTION CODEXmdDzdpSearch = 3099
)

var CODEXmdDzdpSearch_name = map[int32]string{
	0:    "XMD_DZDP_S_S_WAIT",
	3001: "XMD_DZDP_S_I_SUCCESS",
	3002: "XMD_DZDP_S_I_CITY_NOT_FOUND",
	3099: "XMD_DZDP_S_I_FETCH_EXCEPTION",
}
var CODEXmdDzdpSearch_value = map[string]int32{
	"XMD_DZDP_S_S_WAIT":            0,
	"XMD_DZDP_S_I_SUCCESS":         3001,
	"XMD_DZDP_S_I_CITY_NOT_FOUND":  3002,
	"XMD_DZDP_S_I_FETCH_EXCEPTION": 3099,
}

func (x CODEXmdDzdpSearch) String() string {
	return proto.EnumName(CODEXmdDzdpSearch_name, int32(x))
}
func (CODEXmdDzdpSearch) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type CODEXmdDzdpComment int32

const (
	CODEXmdDzdpComment_XMD_DZDP_C_S_WAIT            CODEXmdDzdpComment = 0
	CODEXmdDzdpComment_XMD_DZDP_C_I_SUCCESS         CODEXmdDzdpComment = 3101
	CODEXmdDzdpComment_XMD_DZDP_C_I_DISAPPEAR       CODEXmdDzdpComment = 3102
	CODEXmdDzdpComment_XMD_DZDP_C_I_FETCH_EXCEPTION CODEXmdDzdpComment = 3199
)

var CODEXmdDzdpComment_name = map[int32]string{
	0:    "XMD_DZDP_C_S_WAIT",
	3101: "XMD_DZDP_C_I_SUCCESS",
	3102: "XMD_DZDP_C_I_DISAPPEAR",
	3199: "XMD_DZDP_C_I_FETCH_EXCEPTION",
}
var CODEXmdDzdpComment_value = map[string]int32{
	"XMD_DZDP_C_S_WAIT":            0,
	"XMD_DZDP_C_I_SUCCESS":         3101,
	"XMD_DZDP_C_I_DISAPPEAR":       3102,
	"XMD_DZDP_C_I_FETCH_EXCEPTION": 3199,
}

func (x CODEXmdDzdpComment) String() string {
	return proto.EnumName(CODEXmdDzdpComment_name, int32(x))
}
func (CODEXmdDzdpComment) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type SitesRequest struct {
	Unamed int32 `protobuf:"varint,1,opt,name=unamed" json:"unamed,omitempty"`
}

func (m *SitesRequest) Reset()                    { *m = SitesRequest{} }
func (m *SitesRequest) String() string            { return proto.CompactTextString(m) }
func (*SitesRequest) ProtoMessage()               {}
func (*SitesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *SitesRequest) GetUnamed() int32 {
	if m != nil {
		return m.Unamed
	}
	return 0
}

type SitesResponse struct {
	Sites string `protobuf:"bytes,1,opt,name=sites" json:"sites,omitempty"`
}

func (m *SitesResponse) Reset()                    { *m = SitesResponse{} }
func (m *SitesResponse) String() string            { return proto.CompactTextString(m) }
func (*SitesResponse) ProtoMessage()               {}
func (*SitesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *SitesResponse) GetSites() string {
	if m != nil {
		return m.Sites
	}
	return ""
}

type RequestYYS struct {
	Token  string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	Site   string `protobuf:"bytes,2,opt,name=site" json:"site,omitempty"`
	Idcard string `protobuf:"bytes,3,opt,name=idcard" json:"idcard,omitempty"`
	Name   string `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	Phone  string `protobuf:"bytes,5,opt,name=phone" json:"phone,omitempty"`
	Pwd    string `protobuf:"bytes,6,opt,name=pwd" json:"pwd,omitempty"`
	Repwd  string `protobuf:"bytes,7,opt,name=repwd" json:"repwd,omitempty"`
	Sms    string `protobuf:"bytes,8,opt,name=sms" json:"sms,omitempty"`
}

func (m *RequestYYS) Reset()                    { *m = RequestYYS{} }
func (m *RequestYYS) String() string            { return proto.CompactTextString(m) }
func (*RequestYYS) ProtoMessage()               {}
func (*RequestYYS) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *RequestYYS) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *RequestYYS) GetSite() string {
	if m != nil {
		return m.Site
	}
	return ""
}

func (m *RequestYYS) GetIdcard() string {
	if m != nil {
		return m.Idcard
	}
	return ""
}

func (m *RequestYYS) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RequestYYS) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *RequestYYS) GetPwd() string {
	if m != nil {
		return m.Pwd
	}
	return ""
}

func (m *RequestYYS) GetRepwd() string {
	if m != nil {
		return m.Repwd
	}
	return ""
}

func (m *RequestYYS) GetSms() string {
	if m != nil {
		return m.Sms
	}
	return ""
}

type ResponseYYS struct {
	Token  string      `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	Status LoginStatus `protobuf:"varint,2,opt,name=status,enum=userlogin.LoginStatus" json:"status,omitempty"`
	Code   int32       `protobuf:"varint,3,opt,name=code" json:"code,omitempty"`
}

func (m *ResponseYYS) Reset()                    { *m = ResponseYYS{} }
func (m *ResponseYYS) String() string            { return proto.CompactTextString(m) }
func (*ResponseYYS) ProtoMessage()               {}
func (*ResponseYYS) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ResponseYYS) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *ResponseYYS) GetStatus() LoginStatus {
	if m != nil {
		return m.Status
	}
	return LoginStatus_MEANLESS
}

func (m *ResponseYYS) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

type RequestGJJ struct {
	Token  string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	Site   string `protobuf:"bytes,2,opt,name=site" json:"site,omitempty"`
	Idcard string `protobuf:"bytes,3,opt,name=idcard" json:"idcard,omitempty"`
	Pwd    string `protobuf:"bytes,4,opt,name=pwd" json:"pwd,omitempty"`
	Sms    string `protobuf:"bytes,5,opt,name=sms" json:"sms,omitempty"`
}

func (m *RequestGJJ) Reset()                    { *m = RequestGJJ{} }
func (m *RequestGJJ) String() string            { return proto.CompactTextString(m) }
func (*RequestGJJ) ProtoMessage()               {}
func (*RequestGJJ) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *RequestGJJ) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *RequestGJJ) GetSite() string {
	if m != nil {
		return m.Site
	}
	return ""
}

func (m *RequestGJJ) GetIdcard() string {
	if m != nil {
		return m.Idcard
	}
	return ""
}

func (m *RequestGJJ) GetPwd() string {
	if m != nil {
		return m.Pwd
	}
	return ""
}

func (m *RequestGJJ) GetSms() string {
	if m != nil {
		return m.Sms
	}
	return ""
}

type ResponseGJJ struct {
	Token  string      `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	Status LoginStatus `protobuf:"varint,2,opt,name=status,enum=userlogin.LoginStatus" json:"status,omitempty"`
	Code   int32       `protobuf:"varint,3,opt,name=code" json:"code,omitempty"`
}

func (m *ResponseGJJ) Reset()                    { *m = ResponseGJJ{} }
func (m *ResponseGJJ) String() string            { return proto.CompactTextString(m) }
func (*ResponseGJJ) ProtoMessage()               {}
func (*ResponseGJJ) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ResponseGJJ) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *ResponseGJJ) GetStatus() LoginStatus {
	if m != nil {
		return m.Status
	}
	return LoginStatus_MEANLESS
}

func (m *ResponseGJJ) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

type RequestXmdDzdpSearch struct {
	Token    string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	City     string `protobuf:"bytes,2,opt,name=city" json:"city,omitempty"`
	ShopName string `protobuf:"bytes,3,opt,name=shopName" json:"shopName,omitempty"`
	ShopId   string `protobuf:"bytes,4,opt,name=shopId" json:"shopId,omitempty"`
}

func (m *RequestXmdDzdpSearch) Reset()                    { *m = RequestXmdDzdpSearch{} }
func (m *RequestXmdDzdpSearch) String() string            { return proto.CompactTextString(m) }
func (*RequestXmdDzdpSearch) ProtoMessage()               {}
func (*RequestXmdDzdpSearch) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *RequestXmdDzdpSearch) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *RequestXmdDzdpSearch) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *RequestXmdDzdpSearch) GetShopName() string {
	if m != nil {
		return m.ShopName
	}
	return ""
}

func (m *RequestXmdDzdpSearch) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

type ResponseXmdDzdpSearch struct {
	Token    string      `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	Status   LoginStatus `protobuf:"varint,2,opt,name=status,enum=userlogin.LoginStatus" json:"status,omitempty"`
	Code     int32       `protobuf:"varint,3,opt,name=code" json:"code,omitempty"`
	ShopInfo string      `protobuf:"bytes,4,opt,name=shopInfo" json:"shopInfo,omitempty"`
}

func (m *ResponseXmdDzdpSearch) Reset()                    { *m = ResponseXmdDzdpSearch{} }
func (m *ResponseXmdDzdpSearch) String() string            { return proto.CompactTextString(m) }
func (*ResponseXmdDzdpSearch) ProtoMessage()               {}
func (*ResponseXmdDzdpSearch) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *ResponseXmdDzdpSearch) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *ResponseXmdDzdpSearch) GetStatus() LoginStatus {
	if m != nil {
		return m.Status
	}
	return LoginStatus_MEANLESS
}

func (m *ResponseXmdDzdpSearch) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ResponseXmdDzdpSearch) GetShopInfo() string {
	if m != nil {
		return m.ShopInfo
	}
	return ""
}

type RequestXmdDzdpComment struct {
	Token  string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	ShopID string `protobuf:"bytes,2,opt,name=shopID" json:"shopID,omitempty"`
}

func (m *RequestXmdDzdpComment) Reset()                    { *m = RequestXmdDzdpComment{} }
func (m *RequestXmdDzdpComment) String() string            { return proto.CompactTextString(m) }
func (*RequestXmdDzdpComment) ProtoMessage()               {}
func (*RequestXmdDzdpComment) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *RequestXmdDzdpComment) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *RequestXmdDzdpComment) GetShopID() string {
	if m != nil {
		return m.ShopID
	}
	return ""
}

type ResponseXmdDzdpComment struct {
	Token     string      `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	Status    LoginStatus `protobuf:"varint,2,opt,name=status,enum=userlogin.LoginStatus" json:"status,omitempty"`
	Code      int32       `protobuf:"varint,3,opt,name=code" json:"code,omitempty"`
	Comments  []string    `protobuf:"bytes,4,rep,name=comments" json:"comments,omitempty"`
	Basicinfo string      `protobuf:"bytes,5,opt,name=basicinfo" json:"basicinfo,omitempty"`
}

func (m *ResponseXmdDzdpComment) Reset()                    { *m = ResponseXmdDzdpComment{} }
func (m *ResponseXmdDzdpComment) String() string            { return proto.CompactTextString(m) }
func (*ResponseXmdDzdpComment) ProtoMessage()               {}
func (*ResponseXmdDzdpComment) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *ResponseXmdDzdpComment) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *ResponseXmdDzdpComment) GetStatus() LoginStatus {
	if m != nil {
		return m.Status
	}
	return LoginStatus_MEANLESS
}

func (m *ResponseXmdDzdpComment) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ResponseXmdDzdpComment) GetComments() []string {
	if m != nil {
		return m.Comments
	}
	return nil
}

func (m *ResponseXmdDzdpComment) GetBasicinfo() string {
	if m != nil {
		return m.Basicinfo
	}
	return ""
}

func init() {
	proto.RegisterType((*SitesRequest)(nil), "userlogin.SitesRequest")
	proto.RegisterType((*SitesResponse)(nil), "userlogin.SitesResponse")
	proto.RegisterType((*RequestYYS)(nil), "userlogin.RequestYYS")
	proto.RegisterType((*ResponseYYS)(nil), "userlogin.ResponseYYS")
	proto.RegisterType((*RequestGJJ)(nil), "userlogin.RequestGJJ")
	proto.RegisterType((*ResponseGJJ)(nil), "userlogin.ResponseGJJ")
	proto.RegisterType((*RequestXmdDzdpSearch)(nil), "userlogin.RequestXmdDzdpSearch")
	proto.RegisterType((*ResponseXmdDzdpSearch)(nil), "userlogin.ResponseXmdDzdpSearch")
	proto.RegisterType((*RequestXmdDzdpComment)(nil), "userlogin.RequestXmdDzdpComment")
	proto.RegisterType((*ResponseXmdDzdpComment)(nil), "userlogin.ResponseXmdDzdpComment")
	proto.RegisterEnum("userlogin.CODEYYS", CODEYYS_name, CODEYYS_value)
	proto.RegisterEnum("userlogin.LoginStatus", LoginStatus_name, LoginStatus_value)
	proto.RegisterEnum("userlogin.CODEGJJ", CODEGJJ_name, CODEGJJ_value)
	proto.RegisterEnum("userlogin.CODEXmdDzdpSearch", CODEXmdDzdpSearch_name, CODEXmdDzdpSearch_value)
	proto.RegisterEnum("userlogin.CODEXmdDzdpComment", CODEXmdDzdpComment_name, CODEXmdDzdpComment_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for UserLogin service

type UserLoginClient interface {
	LoadSites(ctx context.Context, in *SitesRequest, opts ...grpc.CallOption) (*SitesResponse, error)
	LoginYys(ctx context.Context, in *RequestYYS, opts ...grpc.CallOption) (*ResponseYYS, error)
	LoginGjj(ctx context.Context, in *RequestGJJ, opts ...grpc.CallOption) (*ResponseGJJ, error)
	SearchXmdDzdp(ctx context.Context, in *RequestXmdDzdpSearch, opts ...grpc.CallOption) (*ResponseXmdDzdpSearch, error)
	GetCommentsXmdDzdp(ctx context.Context, in *RequestXmdDzdpComment, opts ...grpc.CallOption) (*ResponseXmdDzdpComment, error)
}

type userLoginClient struct {
	cc *grpc.ClientConn
}

func NewUserLoginClient(cc *grpc.ClientConn) UserLoginClient {
	return &userLoginClient{cc}
}

func (c *userLoginClient) LoadSites(ctx context.Context, in *SitesRequest, opts ...grpc.CallOption) (*SitesResponse, error) {
	out := new(SitesResponse)
	err := grpc.Invoke(ctx, "/userlogin.UserLogin/loadSites", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userLoginClient) LoginYys(ctx context.Context, in *RequestYYS, opts ...grpc.CallOption) (*ResponseYYS, error) {
	out := new(ResponseYYS)
	err := grpc.Invoke(ctx, "/userlogin.UserLogin/loginYys", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userLoginClient) LoginGjj(ctx context.Context, in *RequestGJJ, opts ...grpc.CallOption) (*ResponseGJJ, error) {
	out := new(ResponseGJJ)
	err := grpc.Invoke(ctx, "/userlogin.UserLogin/loginGjj", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userLoginClient) SearchXmdDzdp(ctx context.Context, in *RequestXmdDzdpSearch, opts ...grpc.CallOption) (*ResponseXmdDzdpSearch, error) {
	out := new(ResponseXmdDzdpSearch)
	err := grpc.Invoke(ctx, "/userlogin.UserLogin/searchXmdDzdp", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userLoginClient) GetCommentsXmdDzdp(ctx context.Context, in *RequestXmdDzdpComment, opts ...grpc.CallOption) (*ResponseXmdDzdpComment, error) {
	out := new(ResponseXmdDzdpComment)
	err := grpc.Invoke(ctx, "/userlogin.UserLogin/getCommentsXmdDzdp", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for UserLogin service

type UserLoginServer interface {
	LoadSites(context.Context, *SitesRequest) (*SitesResponse, error)
	LoginYys(context.Context, *RequestYYS) (*ResponseYYS, error)
	LoginGjj(context.Context, *RequestGJJ) (*ResponseGJJ, error)
	SearchXmdDzdp(context.Context, *RequestXmdDzdpSearch) (*ResponseXmdDzdpSearch, error)
	GetCommentsXmdDzdp(context.Context, *RequestXmdDzdpComment) (*ResponseXmdDzdpComment, error)
}

func RegisterUserLoginServer(s *grpc.Server, srv UserLoginServer) {
	s.RegisterService(&_UserLogin_serviceDesc, srv)
}

func _UserLogin_LoadSites_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SitesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserLoginServer).LoadSites(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userlogin.UserLogin/LoadSites",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserLoginServer).LoadSites(ctx, req.(*SitesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserLogin_LoginYys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestYYS)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserLoginServer).LoginYys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userlogin.UserLogin/LoginYys",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserLoginServer).LoginYys(ctx, req.(*RequestYYS))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserLogin_LoginGjj_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestGJJ)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserLoginServer).LoginGjj(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userlogin.UserLogin/LoginGjj",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserLoginServer).LoginGjj(ctx, req.(*RequestGJJ))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserLogin_SearchXmdDzdp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestXmdDzdpSearch)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserLoginServer).SearchXmdDzdp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userlogin.UserLogin/SearchXmdDzdp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserLoginServer).SearchXmdDzdp(ctx, req.(*RequestXmdDzdpSearch))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserLogin_GetCommentsXmdDzdp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestXmdDzdpComment)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserLoginServer).GetCommentsXmdDzdp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userlogin.UserLogin/GetCommentsXmdDzdp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserLoginServer).GetCommentsXmdDzdp(ctx, req.(*RequestXmdDzdpComment))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserLogin_serviceDesc = grpc.ServiceDesc{
	ServiceName: "userlogin.UserLogin",
	HandlerType: (*UserLoginServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "loadSites",
			Handler:    _UserLogin_LoadSites_Handler,
		},
		{
			MethodName: "loginYys",
			Handler:    _UserLogin_LoginYys_Handler,
		},
		{
			MethodName: "loginGjj",
			Handler:    _UserLogin_LoginGjj_Handler,
		},
		{
			MethodName: "searchXmdDzdp",
			Handler:    _UserLogin_SearchXmdDzdp_Handler,
		},
		{
			MethodName: "getCommentsXmdDzdp",
			Handler:    _UserLogin_GetCommentsXmdDzdp_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb/user_login.proto",
}

func init() { proto.RegisterFile("pb/user_login.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1128 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xac, 0x56, 0xcd, 0x6f, 0xe3, 0xd4,
	0x17, 0x1d, 0x37, 0x6d, 0xdd, 0xdc, 0xb6, 0x99, 0xd7, 0xd7, 0x34, 0x75, 0xd3, 0x4a, 0xbf, 0xd6,
	0xd2, 0x0f, 0xa1, 0x2c, 0xd2, 0xe9, 0xb0, 0x1b, 0x56, 0x19, 0xdb, 0xcd, 0x38, 0x4a, 0x1c, 0xcb,
	0x4e, 0xa6, 0x0d, 0x1b, 0xcb, 0x8d, 0x4d, 0x9a, 0xd2, 0xd8, 0x99, 0xd8, 0x1d, 0xd4, 0x59, 0xb2,
	0x60, 0x81, 0xc4, 0x8a, 0x05, 0x0b, 0x04, 0x12, 0xac, 0x59, 0x21, 0xf1, 0x31, 0xfc, 0x13, 0x2c,
	0xf8, 0x17, 0x10, 0x12, 0x30, 0x7c, 0x7f, 0xb3, 0x01, 0xbd, 0x67, 0x3b, 0x79, 0xee, 0x24, 0x88,
	0x45, 0x37, 0xa3, 0x77, 0xef, 0x3d, 0x39, 0xf7, 0x9c, 0xeb, 0x3b, 0xaf, 0x0f, 0xd6, 0x87, 0x27,
	0xfb, 0x17, 0x81, 0x3b, 0xb2, 0xce, 0xfd, 0x5e, 0xdf, 0x2b, 0x0f, 0x47, 0x7e, 0xe8, 0xe3, 0x2c,
	0xc9, 0xd0, 0x44, 0x71, 0xa7, 0xe7, 0xfb, 0xbd, 0x73, 0x77, 0xdf, 0x1e, 0xf6, 0xf7, 0x6d, 0xcf,
	0xf3, 0x43, 0x3b, 0xec, 0xfb, 0x5e, 0x10, 0x01, 0xc5, 0x67, 0x60, 0xc5, 0xec, 0x87, 0x6e, 0x60,
	0xb8, 0x0f, 0x2e, 0xdc, 0x20, 0xc4, 0x05, 0x58, 0xbc, 0xf0, 0xec, 0x81, 0xeb, 0x08, 0xdc, 0x2e,
	0xf7, 0xec, 0x82, 0x11, 0x47, 0xe2, 0xff, 0x61, 0x35, 0xc6, 0x05, 0x43, 0xdf, 0x0b, 0x5c, 0x9c,
	0x87, 0x85, 0x80, 0x24, 0x28, 0x2e, 0x6b, 0x44, 0x81, 0xf8, 0x01, 0x07, 0x10, 0x53, 0x75, 0x3a,
	0x26, 0x01, 0x85, 0xfe, 0x4b, 0xae, 0x97, 0x80, 0x68, 0x80, 0x31, 0xcc, 0x13, 0xb4, 0x30, 0x47,
	0x93, 0xf4, 0x4c, 0xfa, 0xf6, 0x9d, 0xae, 0x3d, 0x72, 0x84, 0x0c, 0xcd, 0xc6, 0x11, 0xc1, 0x12,
	0x01, 0xc2, 0x7c, 0x84, 0x25, 0x67, 0xc2, 0x3a, 0x3c, 0xf5, 0x3d, 0x57, 0x58, 0x88, 0x58, 0x69,
	0x80, 0x11, 0x64, 0x86, 0x2f, 0x3b, 0xc2, 0x22, 0xcd, 0x91, 0x23, 0xc1, 0x8d, 0x5c, 0x92, 0xe3,
	0x23, 0x1c, 0x0d, 0x08, 0x2e, 0x18, 0x04, 0xc2, 0x52, 0x84, 0x0b, 0x06, 0x81, 0xd8, 0x83, 0xe5,
	0xc4, 0xd6, 0x6c, 0xd1, 0x65, 0x58, 0x0c, 0x42, 0x3b, 0xbc, 0x08, 0xa8, 0xec, 0xdc, 0xed, 0x42,
	0x79, 0x3c, 0xe2, 0x72, 0x9d, 0xfc, 0x6b, 0xd2, 0xaa, 0x11, 0xa3, 0x88, 0xf0, 0xae, 0xef, 0xb8,
	0xd4, 0xce, 0x82, 0x41, 0xcf, 0xe2, 0x68, 0x3c, 0x9c, 0x6a, 0xad, 0x76, 0x0d, 0xc3, 0x89, 0x2d,
	0xcf, 0x4f, 0x2c, 0xc7, 0xe6, 0x16, 0xa6, 0x9a, 0x9b, 0xdd, 0xf4, 0x3a, 0xcc, 0x85, 0x90, 0x8f,
	0xcd, 0x1d, 0x0f, 0x1c, 0xf9, 0x91, 0x33, 0x34, 0x5d, 0x7b, 0xd4, 0x3d, 0x9d, 0x6d, 0xb3, 0xdb,
	0x0f, 0x2f, 0x13, 0x9b, 0xe4, 0x8c, 0x8b, 0xb0, 0x14, 0x9c, 0xfa, 0x43, 0x8d, 0x7c, 0xef, 0xc8,
	0xe8, 0x38, 0x26, 0x23, 0x20, 0x67, 0x35, 0x71, 0x1b, 0x47, 0xe2, 0xeb, 0x1c, 0x6c, 0x24, 0xfe,
	0xfe, 0x4b, 0xdf, 0x6b, 0x70, 0x9a, 0xe8, 0x54, 0xbd, 0x17, 0xfd, 0x58, 0xcd, 0x38, 0x16, 0x15,
	0x22, 0x87, 0x9d, 0x82, 0xe4, 0x0f, 0x06, 0xae, 0x17, 0xce, 0x90, 0x93, 0xd8, 0x92, 0xe3, 0x41,
	0xc4, 0x91, 0xf8, 0x3e, 0x07, 0x85, 0x2b, 0xb6, 0xfe, 0x9d, 0xe8, 0x9a, 0x7c, 0x75, 0xa3, 0x26,
	0x81, 0x30, 0xbf, 0x9b, 0x21, 0xbe, 0x92, 0x18, 0xef, 0x40, 0xf6, 0xc4, 0x0e, 0xfa, 0xdd, 0x3e,
	0x31, 0x1d, 0xad, 0xd7, 0x24, 0x51, 0x7a, 0x92, 0x01, 0x5e, 0x6a, 0xca, 0x0a, 0xf9, 0xef, 0x93,
	0x03, 0xe8, 0x74, 0x4c, 0xcb, 0xb4, 0x8e, 0x2a, 0x6a, 0x0b, 0xdd, 0xc0, 0x18, 0x56, 0x49, 0xac,
	0x5a, 0x66, 0x5b, 0x92, 0x14, 0xd3, 0x44, 0x5f, 0xf1, 0xb8, 0x08, 0x1b, 0x51, 0x4e, 0xd5, 0xf4,
	0x76, 0xcb, 0x32, 0x1b, 0xa6, 0x55, 0xa9, 0x56, 0x54, 0x0d, 0x7d, 0xcd, 0xe3, 0x3c, 0xdc, 0xbc,
	0x52, 0x43, 0xdf, 0xf0, 0x13, 0x16, 0xfd, 0x48, 0xb6, 0x14, 0xc3, 0x40, 0x4f, 0x98, 0x1c, 0xf9,
	0x3d, 0xc9, 0x7d, 0xcb, 0xe3, 0x02, 0xac, 0x4d, 0x72, 0xaa, 0x76, 0xbf, 0x52, 0x57, 0x65, 0xf4,
	0x1d, 0x8f, 0xb7, 0x20, 0x1f, 0xb3, 0xca, 0x52, 0xc5, 0x90, 0xc7, 0xa5, 0xef, 0x79, 0xbc, 0x09,
	0x78, 0x42, 0x6d, 0xaa, 0x0d, 0x4b, 0xd5, 0xd4, 0x16, 0xfa, 0x81, 0xc7, 0x02, 0xac, 0x47, 0x85,
	0x7a, 0xb3, 0xaa, 0x6a, 0x63, 0xfd, 0x3f, 0x32, 0x15, 0xfd, 0x5e, 0x53, 0x53, 0xc6, 0x64, 0x3f,
	0x31, 0x64, 0x5a, 0xa5, 0x31, 0x29, 0xfc, 0xcc, 0xe3, 0x1d, 0xd8, 0x64, 0x7f, 0xa2, 0x35, 0x5b,
	0x96, 0xd9, 0xd6, 0xf5, 0xa6, 0xd1, 0x42, 0xbf, 0xb0, 0xb2, 0x15, 0xe3, 0xbe, 0x2a, 0x29, 0x56,
	0xf3, 0xf0, 0x10, 0xfd, 0xca, 0x0c, 0x43, 0x3a, 0x3e, 0x96, 0xad, 0x83, 0x5b, 0xb7, 0x0e, 0xd0,
	0x6f, 0xcc, 0xf8, 0xc6, 0xd9, 0x78, 0x7c, 0xbf, 0x33, 0x4c, 0xd1, 0xf8, 0x0c, 0x45, 0x3f, 0x92,
	0xd1, 0x1f, 0x0c, 0x13, 0xcd, 0xd0, 0x71, 0xfd, 0xc9, 0x18, 0x39, 0x54, 0x5a, 0xd2, 0x3d, 0xab,
	0xa5, 0x36, 0x94, 0x66, 0xbb, 0x85, 0xfe, 0x62, 0x7a, 0x44, 0x15, 0xe5, 0x58, 0x52, 0xf4, 0x96,
	0xda, 0xd4, 0xd0, 0x67, 0x37, 0x4b, 0x15, 0x58, 0x66, 0x76, 0x0a, 0xaf, 0xc0, 0x52, 0x43, 0xa9,
	0x68, 0x75, 0x32, 0x9c, 0x1b, 0x78, 0x19, 0xf8, 0x64, 0x52, 0x1c, 0x09, 0x74, 0xa3, 0x49, 0x83,
	0x39, 0x0c, 0xb0, 0x78, 0x58, 0x51, 0xeb, 0x8a, 0x8c, 0x32, 0xa5, 0x77, 0xb9, 0x68, 0x63, 0xc8,
	0x9d, 0x94, 0x03, 0xa8, 0xd6, 0x6a, 0xa9, 0x8d, 0x21, 0xf1, 0x64, 0x63, 0x3e, 0x44, 0x44, 0x68,
	0x94, 0x4b, 0x7f, 0x8b, 0x8f, 0x10, 0x31, 0x16, 0x55, 0x26, 0xfb, 0xf2, 0x31, 0x9a, 0x70, 0x24,
	0x66, 0x3f, 0x61, 0x72, 0xc9, 0xbe, 0x3c, 0x46, 0xc4, 0x66, 0x94, 0xbb, 0x6a, 0xf3, 0xcd, 0xb5,
	0xd2, 0x6b, 0x1c, 0xac, 0x11, 0x8d, 0xe9, 0x7b, 0x65, 0x03, 0xd6, 0x8e, 0x1b, 0xb2, 0x25, 0xbf,
	0x20, 0xeb, 0x16, 0xb3, 0xe6, 0x5b, 0x90, 0x67, 0xd2, 0x13, 0xed, 0x8f, 0x37, 0xf1, 0x2e, 0x6c,
	0xa7, 0x4a, 0x92, 0xda, 0xea, 0xd0, 0x05, 0x38, 0x6c, 0xb6, 0x35, 0x19, 0x7d, 0xba, 0x89, 0xf7,
	0x60, 0x27, 0x85, 0xb8, 0x2a, 0xe6, 0x2d, 0xa1, 0xf4, 0x2a, 0x07, 0x98, 0x11, 0x93, 0xdc, 0x06,
	0xac, 0x1a, 0x69, 0xba, 0x1a, 0x89, 0x51, 0xf3, 0xb6, 0x80, 0xb7, 0xa1, 0x90, 0x2a, 0xc9, 0xaa,
	0x59, 0xd1, 0x75, 0xa5, 0x62, 0xa0, 0x77, 0x84, 0x94, 0x10, 0x69, 0x8a, 0x90, 0xbf, 0x85, 0xdb,
	0x5f, 0x66, 0x20, 0xdb, 0x0e, 0xdc, 0x11, 0xdd, 0x00, 0xdc, 0x82, 0xec, 0xb9, 0x6f, 0x3b, 0xf4,
	0x6d, 0x80, 0x37, 0x99, 0x4b, 0x87, 0x7d, 0x55, 0x14, 0x85, 0xa7, 0x0b, 0xd1, 0xdd, 0x26, 0xe6,
	0x5f, 0xf9, 0xfc, 0x8b, 0x37, 0xe6, 0x72, 0x62, 0x76, 0xff, 0xe1, 0xc1, 0x3e, 0x7d, 0x43, 0xdc,
	0xe1, 0x4a, 0xb8, 0x01, 0x4b, 0x14, 0xdc, 0xb9, 0x0c, 0xf0, 0x06, 0xf3, 0xdb, 0xc9, 0xd3, 0xa2,
	0x58, 0x48, 0xa5, 0xc7, 0x7f, 0xbd, 0x45, 0x4c, 0x09, 0x57, 0x44, 0x9e, 0x10, 0x5e, 0x5e, 0xa6,
	0xe8, 0xaa, 0x67, 0x67, 0xd3, 0xe8, 0xaa, 0xb5, 0xda, 0x54, 0xba, 0x6a, 0xad, 0x96, 0xa6, 0xeb,
	0x9d, 0x9d, 0x11, 0xba, 0x01, 0xac, 0x06, 0x74, 0x17, 0xe2, 0x6f, 0x81, 0xff, 0xf7, 0x34, 0x67,
	0x6a, 0x67, 0x8a, 0xbb, 0x53, 0xd8, 0x53, 0x08, 0x71, 0x8b, 0xf6, 0x59, 0x17, 0x73, 0xa4, 0x8f,
	0xf3, 0xc8, 0x19, 0x46, 0x1d, 0x48, 0xbb, 0x87, 0x80, 0x7b, 0x6e, 0x18, 0x7f, 0xf0, 0x20, 0xe9,
	0xb9, 0x3b, 0xb3, 0x67, 0x8c, 0x2c, 0xee, 0xcd, 0x6e, 0x1a, 0x43, 0xc4, 0x6d, 0xda, 0x75, 0x43,
	0x44, 0x49, 0xd7, 0xe4, 0xbe, 0xbf, 0xc3, 0x95, 0xee, 0x3e, 0x0f, 0x7b, 0x5d, 0x7f, 0x50, 0x7e,
	0xd0, 0xb7, 0xbd, 0x13, 0xdb, 0x2f, 0x3b, 0x76, 0x68, 0x37, 0x2f, 0xc2, 0x72, 0x30, 0xec, 0x3b,
	0xee, 0xa8, 0x4c, 0x90, 0xbe, 0x77, 0x37, 0x37, 0x5e, 0x05, 0x9d, 0xbc, 0x27, 0x75, 0xee, 0xbd,
	0xb9, 0x4c, 0x5b, 0xa9, 0x9f, 0x2c, 0xd2, 0xe7, 0xe5, 0x73, 0xff, 0x04, 0x00, 0x00, 0xff, 0xff,
	0x30, 0x28, 0xb1, 0xf8, 0x9e, 0x0a, 0x00, 0x00,
}
